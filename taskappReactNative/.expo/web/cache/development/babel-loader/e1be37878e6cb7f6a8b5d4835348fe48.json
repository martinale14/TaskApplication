{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/martin/Documents/estudios/react-native/myApp/node_modules/react-native-floating-action/src/FloatingActionItem.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { getTouchableComponent } from \"./utils/touchable\";\n\nvar FloatingActionItem = function (_Component) {\n  _inherits(FloatingActionItem, _Component);\n\n  var _super = _createSuper(FloatingActionItem);\n\n  function FloatingActionItem(props) {\n    var _this;\n\n    _classCallCheck(this, FloatingActionItem);\n\n    _this = _super.call(this, props);\n\n    _this.handleOnPress = function () {\n      var _this$props = _this.props,\n          name = _this$props.name,\n          onPress = _this$props.onPress;\n      onPress(name);\n    };\n\n    _this.animation = new Animated.Value(0);\n    return _this;\n  }\n\n  _createClass(FloatingActionItem, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props2 = this.props,\n          active = _this$props2.active,\n          animated = _this$props2.animated;\n\n      if (prevProps.active !== active && animated) {\n        Animated.spring(this.animation, {\n          toValue: active ? 1 : 0,\n          useNativeDriver: false\n        }).start();\n      }\n    }\n  }, {\n    key: \"distanceToHorizontalEdge\",\n    get: function get() {\n      var distanceToEdge = this.props.distanceToEdge;\n      return typeof distanceToEdge === 'number' ? distanceToEdge : distanceToEdge.horizontal;\n    }\n  }, {\n    key: \"distanceToVerticalEdge\",\n    get: function get() {\n      var distanceToEdge = this.props.distanceToEdge;\n      return typeof distanceToEdge === 'number' ? distanceToEdge : distanceToEdge.vertical;\n    }\n  }, {\n    key: \"renderText\",\n    value: function renderText() {\n      var _this$props3 = this.props,\n          elevation = _this$props3.elevation,\n          text = _this$props3.text,\n          position = _this$props3.position,\n          textElevation = _this$props3.textElevation,\n          textBackground = _this$props3.textBackground,\n          textColor = _this$props3.textColor,\n          textStyle = _this$props3.textStyle,\n          textProps = _this$props3.textProps,\n          textContainerStyle = _this$props3.textContainerStyle,\n          shadow = _this$props3.shadow;\n\n      if (elevation !== undefined) {\n        console.warn('FloatingActionItem: \"elevation\" property was deprecated. Please use \"textElevation\"');\n      }\n\n      if (text) {\n        return React.createElement(View, {\n          key: \"text\",\n          style: [styles.textContainer, styles[position + \"TextContainer\"], {\n            backgroundColor: textBackground,\n            elevation: textElevation || elevation,\n            shadowOffset: {\n              height: textElevation || elevation\n            }\n          }, shadow, textContainerStyle],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, _extends({\n          style: [styles.text, {\n            color: textColor\n          }, textStyle]\n        }, textProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }\n        }), text));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton() {\n      var _this$props4 = this.props,\n          buttonSize = _this$props4.buttonSize,\n          icon = _this$props4.icon,\n          color = _this$props4.color,\n          shadow = _this$props4.shadow,\n          tintColor = _this$props4.tintColor;\n      var iconStyle;\n\n      if (icon && icon.uri) {\n        iconStyle = styles.iconLogo;\n      } else {\n        iconStyle = styles.icon;\n      }\n\n      var propStyles = {\n        tintColor: tintColor,\n        backgroundColor: color,\n        width: buttonSize,\n        height: buttonSize,\n        borderRadius: buttonSize / 2\n      };\n      return React.createElement(View, {\n        key: \"button\",\n        style: [styles.button, propStyles, shadow],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }\n      }, React.isValidElement(icon) ? icon : React.createElement(Image, {\n        style: [iconStyle, {\n          tintColor: tintColor\n        }],\n        source: icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          position = _this$props5.position,\n          paddingTopBottom = _this$props5.paddingTopBottom,\n          render = _this$props5.render,\n          margin = _this$props5.margin,\n          name = _this$props5.name,\n          animated = _this$props5.animated;\n      var Touchable = getTouchableComponent(false);\n      var animatedActionContainerStyle;\n\n      if (animated) {\n        animatedActionContainerStyle = {\n          marginBottom: this.animation.interpolate({\n            inputRange: [0, 1],\n            outputRange: [5, 10]\n          })\n        };\n      } else {\n        animatedActionContainerStyle = {\n          marginBottom: 10\n        };\n      }\n\n      var components = [];\n      var distanceToEdgeActionContainer = {};\n\n      if (position === \"left\") {\n        if (render) {\n          components.push(render({\n            key: name\n          }));\n        } else {\n          components.push(this.renderButton());\n          components.push(this.renderText());\n        }\n\n        distanceToEdgeActionContainer.paddingLeft = this.distanceToHorizontalEdge + margin;\n      } else if (position === \"right\") {\n        if (render) {\n          components.push(render({\n            key: name\n          }));\n        } else {\n          components.push(this.renderText());\n          components.push(this.renderButton());\n        }\n\n        distanceToEdgeActionContainer.paddingRight = this.distanceToHorizontalEdge + margin;\n      } else if (render) {\n        components.push(render({\n          key: name\n        }));\n      } else {\n        components.push(this.renderButton());\n      }\n\n      return React.createElement(Touchable, {\n        activeOpacity: 0.4,\n        style: styles.container,\n        onPress: this.handleOnPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 7\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.actionContainer, animatedActionContainerStyle, styles[position + \"ActionContainer\"], distanceToEdgeActionContainer, {\n          paddingTop: paddingTopBottom,\n          paddingBottom: paddingTopBottom\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }\n      }, components));\n    }\n  }]);\n\n  return FloatingActionItem;\n}(Component);\n\nFloatingActionItem.propTypes = {\n  tintColor: PropTypes.string,\n  color: PropTypes.string,\n  icon: PropTypes.any,\n  name: PropTypes.string.isRequired,\n  buttonSize: PropTypes.number,\n  textContainerStyle: PropTypes.object,\n  text: PropTypes.string,\n  textStyle: PropTypes.object,\n  textProps: PropTypes.object,\n  textBackground: PropTypes.string,\n  textColor: PropTypes.string,\n  shadow: PropTypes.shape({\n    shadowOpacity: PropTypes.number,\n    shadowOffset: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number\n    }),\n    shadowColor: PropTypes.string,\n    shadowRadius: PropTypes.number\n  }),\n  textElevation: PropTypes.number,\n  position: PropTypes.oneOf([\"left\", \"right\", \"center\"]),\n  active: PropTypes.bool,\n  distanceToEdge: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    vertical: PropTypes.number,\n    horizontal: PropTypes.number\n  })]),\n  paddingTopBottom: PropTypes.number,\n  onPress: PropTypes.func,\n  render: PropTypes.func,\n  margin: PropTypes.number,\n  animated: PropTypes.bool\n};\nFloatingActionItem.defaultProps = {\n  tintColor: '#fff',\n  color: \"#1253bc\",\n  distanceToEdge: 30,\n  buttonSize: 40,\n  textElevation: 5,\n  textColor: \"#444444\",\n  textBackground: \"#ffffff\",\n  margin: 8,\n  shadow: {\n    shadowOpacity: 0.35,\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowColor: \"#000000\",\n    shadowRadius: 3\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    elevation: 0,\n    flex: 1,\n    flexDirection: \"column\"\n  },\n  actionContainer: {\n    elevation: 0,\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0\n  },\n  textContainer: {\n    paddingHorizontal: 8,\n    elevation: 5,\n    borderRadius: 4,\n    height: 22\n  },\n  leftTextContainer: {\n    marginLeft: 14\n  },\n  rightTextContainer: {\n    marginRight: 14\n  },\n  text: {\n    fontSize: 14,\n    lineHeight: 20\n  },\n  button: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    elevation: 5\n  },\n  iconLogo: {\n    resizeMode: \"cover\",\n    width: 40,\n    height: 40,\n    borderRadius: 20\n  },\n  icon: {\n    resizeMode: \"contain\",\n    width: 20,\n    height: 20\n  }\n});\nexport default FloatingActionItem;","map":{"version":3,"sources":["/Users/martin/Documents/estudios/react-native/myApp/node_modules/react-native-floating-action/src/FloatingActionItem.js"],"names":["React","Component","PropTypes","getTouchableComponent","FloatingActionItem","props","handleOnPress","name","onPress","animation","Animated","Value","prevProps","active","animated","spring","toValue","useNativeDriver","start","distanceToEdge","horizontal","vertical","elevation","text","position","textElevation","textBackground","textColor","textStyle","textProps","textContainerStyle","shadow","undefined","console","warn","styles","textContainer","backgroundColor","shadowOffset","height","color","buttonSize","icon","tintColor","iconStyle","uri","iconLogo","propStyles","width","borderRadius","button","isValidElement","paddingTopBottom","render","margin","Touchable","animatedActionContainerStyle","marginBottom","interpolate","inputRange","outputRange","components","distanceToEdgeActionContainer","push","key","renderButton","renderText","paddingLeft","distanceToHorizontalEdge","paddingRight","container","actionContainer","paddingTop","paddingBottom","propTypes","string","any","isRequired","number","object","shape","shadowOpacity","shadowColor","shadowRadius","oneOf","bool","oneOfType","func","defaultProps","StyleSheet","create","flex","flexDirection","alignItems","paddingHorizontal","leftTextContainer","marginLeft","rightTextContainer","marginRight","fontSize","lineHeight","justifyContent","resizeMode"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StyleSheet, Text, Image, View, Animated } from \"react-native\";\n\nimport { getTouchableComponent } from \"./utils/touchable\";\n\nclass FloatingActionItem extends Component {\n  constructor(props) {\n    super(props);\n    this.animation = new Animated.Value(0);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { active, animated } = this.props;\n\n    if (prevProps.active !== active && animated) {\n      Animated.spring(this.animation, {\n        toValue: active ? 1 : 0,\n        useNativeDriver: false\n      }).start();\n    }\n  }\n\n  get distanceToHorizontalEdge() {\n    const { distanceToEdge } = this.props;\n    return typeof distanceToEdge === 'number'\n      ? distanceToEdge\n      : distanceToEdge.horizontal;\n  }\n\n  get distanceToVerticalEdge() {\n    const { distanceToEdge } = this.props;\n    return typeof distanceToEdge === 'number'\n      ? distanceToEdge\n      : distanceToEdge.vertical;\n  }\n\n  handleOnPress = () => {\n    const { name, onPress } = this.props;\n\n    onPress(name);\n  };\n\n  renderText() {\n    const {\n      // @deprecated in favor of textElevation\n      elevation, // eslint-disable-line\n      text,\n      position,\n      textElevation,\n      textBackground,\n      textColor,\n      textStyle,\n      textProps,\n      textContainerStyle,\n      shadow\n    } = this.props;\n\n    if (elevation !== undefined) {\n      console.warn(\n        'FloatingActionItem: \"elevation\" property was deprecated. Please use \"textElevation\"'\n      );\n    }\n\n    if (text) {\n      return (\n        <View\n          key=\"text\"\n          style={[\n            styles.textContainer,\n            styles[`${position}TextContainer`],\n            {\n              backgroundColor: textBackground,\n              elevation: textElevation || elevation,\n              shadowOffset: {\n                height: textElevation || elevation\n              }\n            },\n            shadow,\n            textContainerStyle\n          ]}\n        >\n          <Text\n            style={[\n              styles.text,\n              {\n                color: textColor\n              },\n              textStyle\n            ]}\n            {...textProps}\n          >\n            {text}\n          </Text>\n        </View>\n      );\n    }\n\n    return null;\n  }\n\n  renderButton() {\n    const { buttonSize, icon, color, shadow, tintColor } = this.props;\n\n    let iconStyle;\n\n    if (icon && icon.uri) {\n      iconStyle = styles.iconLogo;\n    } else {\n      iconStyle = styles.icon;\n    }\n\n    const propStyles = {\n      tintColor: tintColor,\n      backgroundColor: color,\n      width: buttonSize,\n      height: buttonSize,\n      borderRadius: buttonSize / 2\n    };\n\n    return (\n      <View\n        key=\"button\"\n        style={[styles.button, propStyles, shadow]}\n      >\n        {React.isValidElement(icon) ? (\n          icon\n        ) : (\n          <Image style={[iconStyle, {tintColor: tintColor}]} source={icon} />\n        )}\n      </View>\n    );\n  }\n\n  render() {\n    const {\n      position,\n      paddingTopBottom,\n      render,\n      margin,\n      name,\n      animated\n    } = this.props;\n\n    const Touchable = getTouchableComponent(false);\n\n    let animatedActionContainerStyle;\n\n    if (animated) {\n      animatedActionContainerStyle = {\n        marginBottom: this.animation.interpolate({\n          inputRange: [0, 1],\n          outputRange: [5, 10]\n        })\n      };\n    } else {\n      animatedActionContainerStyle = { marginBottom: 10 };\n    }\n\n    const components = [];\n    const distanceToEdgeActionContainer = {};\n\n    if (position === \"left\") {\n      if (render) {\n        components.push(render({ key: name }));\n      } else {\n        components.push(this.renderButton());\n        components.push(this.renderText());\n      }\n      distanceToEdgeActionContainer.paddingLeft = this.distanceToHorizontalEdge + margin;\n    } else if (position === \"right\") {\n      if (render) {\n        components.push(render({ key: name }));\n      } else {\n        components.push(this.renderText());\n        components.push(this.renderButton());\n      }\n      distanceToEdgeActionContainer.paddingRight = this.distanceToHorizontalEdge + margin;\n    } else if (render) {\n      components.push(render({ key: name }));\n    } else {\n      components.push(this.renderButton());\n    }\n\n    return (\n      <Touchable\n        activeOpacity={0.4}\n        style={styles.container}\n        onPress={this.handleOnPress}\n      >\n        <Animated.View\n          style={[\n            styles.actionContainer,\n            animatedActionContainerStyle,\n            styles[`${position}ActionContainer`],\n            distanceToEdgeActionContainer,\n            {\n              paddingTop: paddingTopBottom,\n              paddingBottom: paddingTopBottom\n            }\n          ]}\n        >\n          {components}\n        </Animated.View>\n      </Touchable>\n    );\n  }\n}\n\nFloatingActionItem.propTypes = {\n  tintColor: PropTypes.string,\n  color: PropTypes.string,\n  icon: PropTypes.any,\n  name: PropTypes.string.isRequired,\n  buttonSize: PropTypes.number,\n  textContainerStyle: PropTypes.object,\n  text: PropTypes.string,\n  textStyle: PropTypes.object,\n  textProps: PropTypes.object,\n  textBackground: PropTypes.string,\n  textColor: PropTypes.string,\n  shadow: PropTypes.shape({\n    shadowOpacity: PropTypes.number,\n    shadowOffset: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number\n    }),\n    shadowColor: PropTypes.string,\n    shadowRadius: PropTypes.number\n  }),\n  textElevation: PropTypes.number,\n  // not modified by user\n  position: PropTypes.oneOf([\"left\", \"right\", \"center\"]),\n  active: PropTypes.bool,\n  distanceToEdge: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({\n      vertical: PropTypes.number,\n      horizontal: PropTypes.number\n    })\n  ]),\n  paddingTopBottom: PropTypes.number, // modified by parent property \"actionsPaddingTopBottom\"\n  onPress: PropTypes.func,\n  render: PropTypes.func,\n  margin: PropTypes.number,\n  animated: PropTypes.bool\n};\n\nFloatingActionItem.defaultProps = {\n  tintColor: '#fff',\n  color: \"#1253bc\",\n  distanceToEdge: 30,\n  buttonSize: 40,\n  textElevation: 5,\n  textColor: \"#444444\",\n  textBackground: \"#ffffff\",\n  margin: 8,\n  shadow: {\n    shadowOpacity: 0.35,\n    shadowOffset: {\n      width: 0,\n      height: 5\n    },\n    shadowColor: \"#000000\",\n    shadowRadius: 3\n  }\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    elevation: 0,\n    flex: 1,\n    flexDirection: \"column\"\n  },\n  actionContainer: {\n    elevation: 0,\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: 'center',\n    paddingLeft: 0,\n    paddingRight: 0\n  },\n  textContainer: {\n    paddingHorizontal: 8,\n    elevation: 5,\n    borderRadius: 4,\n    height: 22\n  },\n  leftTextContainer: {\n    marginLeft: 14\n  },\n  rightTextContainer: {\n    marginRight: 14\n  },\n  text: {\n    fontSize: 14,\n    lineHeight: 20\n  },\n  button: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    elevation: 5\n  },\n  iconLogo: {\n    resizeMode: \"cover\",\n    width: 40,\n    height: 40,\n    borderRadius: 20\n  },\n  icon: {\n    resizeMode: \"contain\",\n    width: 20,\n    height: 20\n  }\n});\n\nexport default FloatingActionItem;\n"]},"metadata":{},"sourceType":"module"}